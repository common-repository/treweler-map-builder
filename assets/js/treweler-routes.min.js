!function(){"use strict";class e{constructor(){TWER.map.on("load",(async()=>{(!TWER.isEmpty(TWER.routeData)||TWER.data.gpxRoutes.length>0)&&(TWER.map.addSource("locations-route",{type:"geojson",data:TWER.routeData,generateId:!0}),this.setGpsRoutes())}))}async setGpsRoutes(){try{if(TWER.data.gpxRoutes&&await this.loadGpxRoutes(),TWER.routeData.features.length>0)for(let e=0;e<TWER.routeData.features.length;e++)if("static"===TWER.routeData.features[e].properties.route_load){const t=TWER.routeData.features[e].properties.route_id;TWER.map.addLayer({id:`route-${t}`,type:"line",source:"locations-route",layout:{"line-join":"round","line-cap":"round"},paint:{"line-color":["get","line-color"],"line-width":["get","line-width"],"line-opacity":["get","line-opacity"],"line-dasharray":["get","line-dasharray"]},filter:["==",t,["get","route_id"]]})}}catch(e){console.log(e)}}async loadGpxRoutes(){return new Promise((function(e,t){TWER.data.gpxRoutes.forEach((function(o,a){const r=o.route_id,s=o.route_source,i=o.route_data,n=o.category,u=".gpx"===s.substr(s.length-4),l=new XMLHttpRequest;s&&(l.open("GET",s),u&&(l.responseType="document",l.overrideMimeType("text/xml")),l.onload=()=>{if(l.status>=200&&l.status<300){e(l.response);const t=l.response;let o=!1;if(t){if(u){let e,a,s=[],i=t.getElementsByTagName("trkpt");for(let t of i)e=parseFloat(t.getAttribute("lon")),a=parseFloat(t.getAttribute("lat")),s.push([e,a]);if(s.length){for(let e=0;e<TWER.routeData.features.length;e++)TWER.routeData.features[e].properties.route_id===r&&(TWER.routeData.features[e].geometry.coordinates=s);o=!0}}else{const e=JSON.parse(t);if(!TWER.isEmpty(e)){const t=e.routes[0].geometry;if(t){for(let e=0;e<TWER.routeData.features.length;e++)TWER.routeData.features[e].properties.route_id===r&&(TWER.routeData.features[e].geometry=t);o=!0}}}o&&(TWER.map.getSource("locations-route").setData(TWER.routeData),TWER.map.addLayer({id:`route-${r}`,type:"line",source:"locations-route",layout:{"line-join":"round","line-cap":"round"},paint:{"line-color":["get","line-color"],"line-width":["get","line-width"],"line-opacity":["get","line-opacity"],"line-dasharray":i["line-dasharray"]},metadata:{categories:`${n}`},filter:["all",["==",r,["to-number",["get","route_id"]]],["==","dynamic",["get","route_load"]]]}))}}else t(l.statusText)},l.onerror=()=>t(l.statusText),l.send())}))}))}}window.addEventListener("load",(()=>{new e}))}();