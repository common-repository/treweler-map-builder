!function(){"use strict";function e(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}Fancybox.defaults.Hash=!1,window.TWER={clusterDataDump:[],storeLocatorDataDump:[],clusterData:{},clusterDataSources:{},routeData:{},map:{},popups:[],globalClusterStatus:!0,data:{},clusterColor:"#4b7715",markersDataDump:[],markers:[],markersIgnoredClusters:[],boundsData:[],fitBounds:!0,animationDelayClose:400,animationDelayOpen:250,tour:!1,tourAutoRun:!1,tourInProgress:!1,geolocateControl:!1,ajaxLoading:!1,currentMapPageId:0,allMapMarkers:[],markerLocation:!1,markerLocationProps:{id:0,marker_style:"default",point_halo_color:"#fff",point_halo_opacity:.5,point_color:"#4b7715",custom_marker_img:"",cursor:"pointer",anchor:"center"},initAllMapMarkers:function(){const e=new FormData;e.append("action","twer_loadMapMarkers"),e.append("mapId",this.currentMapPageId),fetch(treweler_params.ajax_url,{method:"POST",credentials:"same-origin",body:e}).then((e=>e.json())).then((e=>{e&&(this.allMapMarkers=e)})).catch((e=>{console.error(e)}))},initMap:function(t){TWER.data=t,TWER.clusterDataSources=TWER.clusterData.features,this.currentMapPageId=t.mapPageId,mapboxgl.accessToken=t.accessToken,TWER.clusterColor=t.clusterColor,TWER.allowCluster=t.allowCluster;const a={container:"twer-map",style:t.style,center:t.center,minZoom:t.minZoom,maxZoom:t.maxZoom,zoom:t.zoom,bearing:t.iniBearing,pitch:t.iniPitch,maxPitch:t.maxPitch,minPitch:t.minPitch,attributionControl:!1,logoPosition:t.wordmarkPosition,projection:{name:t.projection},fadeDuration:0};t.restrictPanning&&(a.maxBounds=t.restrictPanningData),TWER.map=new mapboxgl.Map(a),new class{constructor(t){e(this,"layerMappings",{place_labels:"showPlaceLabels",road_labels:"showRoadLabels",points_of_interest:"showPointOfInterestLabels",transit_labels:"showTransitLabels"}),this.mapStyle=t.style,this.activeLayers=t.layers,this.layersTypes=["showPlaceLabels","showRoadLabels","showPointOfInterestLabels","showTransitLabels"],TWER.map.on("style.load",(()=>{""===t.customStyle&&this.handleStyleLoad()}))}handleStyleLoad(){"mapbox://styles/mapbox/standard-beta"===this.mapStyle?this.layersTypes.forEach((e=>{TWER.map.setConfigProperty("basemap",e,this.activeLayers.includes(e))})):this.updateMapLayers()}setLayerVisibility(e,t){TWER.map.setLayoutProperty(e,"visibility",t?"visible":"none")}updateLayerVisibility(e,t,a){e.forEach((e=>{this.setLayerVisibility(e,t.includes(a))}))}updateMapLayers(){const e={showPlaceLabels:["continent-label","country-label","state-label","settlement-major-label","settlement-minor-label","settlement-subdivision-label"],showRoadLabels:["road-exit-shield","road-label-simple","road-exit-shield-navigation","road-number-shield","road-number-shield-navigation","road-label-navigation","road-label","road-intersection"],showPointOfInterestLabels:["poi-label"],showTransitLabels:["airport-label","transit-label","ferry-aerialway-label"],boundaries:["admin-0-boundary-disputed","admin-0-boundary","admin-1-boundary","admin-0-boundary-bg","admin-1-boundary-bg"],building_labels:["block-number-label","building-number-label","building-entrance"],buildings:["building","building-underground","building-outline"],natural_features:["water-point-label","water-line-label","natural-point-label","natural-line-label","waterway-label"],pedestrian_labels:["golf-hole-label","path-pedestrian-label"],pedestrian_roads:["bridge-pedestrian","bridge-steps","bridge-path","bridge-pedestrian-case","bridge-steps-bg","bridge-path-bg","golf-hole-line","road-pedestrian","road-steps","road-path","road-pedestrian-case","road-steps-bg","road-path-bg","road-pedestrian-polygon-pattern","road-pedestrian-polygon-fill","tunnel-pedestrian","tunnel-steps","tunnel-path","gate-label","bridge-path-cycleway-piste","bridge-path-trail","road-path-cycleway-piste","road-path-trail","tunnel-path-cycleway-piste","tunnel-path-trail"],transit:["aerialway","bridge-rail-tracks","bridge-rail","road-rail-tracks","road-rail","ferry-auto","ferry","aeroway-line","aeroway-polygon"],roads:["bridge-oneway-arrow-white","bridge-oneway-arrow-blue","bridge-motorway-trunk-2","bridge-major-link-2","bridge-motorway-trunk-2-case","bridge-major-link-2-case","bridge-motorway-trunk","bridge-primary","bridge-secondary-tertiary","bridge-street-low","bridge-street","bridge-major-link","bridge-minor-link","bridge-minor","bridge-construction","bridge-motorway-trunk-case","bridge-major-link-case","bridge-primary-case","bridge-secondary-tertiary-case","bridge-minor-link-case","bridge-street-case","bridge-minor-case","crosswalks","road-oneway-arrow-white","road-oneway-arrow-blue","level-crossing","road-motorway-trunk","road-primary","road-secondary-tertiary","road-street-low","road-street","road-major-link","road-minor-link","road-minor","road-construction","turning-feature","road-motorway-trunk-case","road-major-link-case","road-primary-case","road-secondary-tertiary-case","road-minor-link-case","road-street-case","road-minor-case","turning-feature-outline","road-polygon","tunnel-oneway-arrow-white","tunnel-oneway-arrow-blue","tunnel-motorway-trunk","tunnel-primary","tunnel-secondary-tertiary","tunnel-street-low","tunnel-street","tunnel-major-link","tunnel-minor-link","tunnel-minor","tunnel-construction","tunnel-motorway-trunk-case","tunnel-major-link-case","tunnel-primary-case","tunnel-secondary-tertiary-case","tunnel-minor-link-case","tunnel-street-case","tunnel-minor-case","bridge-simple","bridge-case-simple","road-simple","tunnel-simple","incident-startpoints-navigation","incident-endpoints-navigation","incident-closure-line-highlights-navigation","incident-closure-lines-navigation","traffic-bridge-oneway-arrow-white-navigation","traffic-bridge-oneway-arrow-blue-navigation","traffic-road-oneway-arrow-white-navigation","traffic-road-oneway-arrow-blue-navigation","traffic-tunnel-oneway-arrow-white-navigation","traffic-tunnel-oneway-arrow-blue-navigation","traffic-level-crossing-navigation","traffic-bridge-road-motorway-trunk-navigation","traffic-bridge-road-motorway-trunk-case-navigation","traffic-bridge-road-major-link-navigation","traffic-bridge-road-primary-navigation","traffic-bridge-road-secondary-tertiary-navigation","traffic-bridge-road-street-navigation","traffic-bridge-road-minor-navigation","traffic-bridge-road-link-navigation","bridge-motorway-trunk-2-navigation","bridge-major-link-2-navigation","bridge-motorway-trunk-2-case-navigation","bridge-major-link-2-case-navigation","bridge-motorway-trunk-navigation","bridge-primary-navigation","bridge-secondary-tertiary-navigation","bridge-street-navigation","bridge-minor-navigation","bridge-major-link-navigation","bridge-construction-navigation","bridge-motorway-trunk-case-navigation","bridge-major-link-case-navigation","bridge-primary-case-navigation","bridge-secondary-tertiary-case-navigation","bridge-street-case-navigation","bridge-street-low-navigation","bridge-minor-case-navigation","turning-feature-navigation","level-crossing-navigation","traffic-tunnel-motorway-trunk-navigation","road-motorway-trunk-navigation","traffic-tunnel-major-link-navigation","road-motorway-trunk-case-low-navigation","traffic-tunnel-primary-navigation","road-primary-navigation","traffic-tunnel-secondary-tertiary-navigation","road-secondary-tertiary-navigation","traffic-tunnel-street-navigation","road-street-navigation","traffic-tunnel-minor-navigation","traffic-tunnel-link-navigation","road-minor-navigation","road-major-link-navigation","road-construction-navigation","road-motorway-trunk-case-navigation","road-major-link-case-navigation","road-primary-case-navigation","road-secondary-tertiary-case-navigation","road-street-case-navigation","road-street-low-navigation","road-minor-case-navigation","turning-feature-outline-navigation","tunnel-motorway-trunk-navigation","tunnel-primary-navigation","tunnel-secondary-tertiary-navigation","tunnel-street-navigation","tunnel-minor-navigation","tunnel-major-link-navigation","tunnel-construction-navigation","tunnel-motorway-trunk-case-navigation","tunnel-major-link-case-navigation","tunnel-primary-case-navigation","tunnel-secondary-tertiary-case-navigation","tunnel-street-case-navigation","tunnel-street-low-navigation","tunnel-minor-case-navigation"],land_structure:["land-structure-line","land-structure-polygon","pitch-outline","landuse","national-park","landcover","national-park_tint-band","cliff","wetland-pattern","wetland"],hillshade:["hillshade"],water_depth:["water-depth"],contour_lines:["contour-label","contour-line"]};TWER.map.getStyle().layers.map((t=>{for(const[a,r]of Object.entries(e))if(r.includes(t.id)){this.setLayerVisibility(t.id,this.activeLayers.includes(a));break}}))}}(t),TWER.map.on("style.load",(()=>{TWER.map.setFog({}),"mapbox://styles/mapbox/standard-beta"===t.style&&t.mapLightPreset&&TWER.map.setConfigProperty("basemap","lightPreset",t.mapLightPreset)})),t.disableDragPan&&TWER.map.dragPan.disable(),TWER.map.addControl(new mapboxgl.AttributionControl({compact:t.compactAttribution}),t.attributionPosition),"browser"!==t.mapLanguange&&(mapboxgl.setRTLTextPlugin("https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.js"),TWER.map.addControl(new MapboxLanguage({defaultLanguage:t.mapLanguange})),setTimeout((function(){TWER.map.setLayoutProperty("country-label","text-field",["get","name_"+t.mapLanguange])}),200)),t.allowBearing||(TWER.map.dragRotate.disable(),TWER.map.touchZoomRotate.disableRotation()),t.scaleControl&&TWER.map.addControl(new mapboxgl.ScaleControl({maxWidth:100,unit:t.scaleControlUnit?t.scaleControlUnit:"imperial"}),t.scaleControlPosition),t.fullscreenControl&&TWER.map.addControl(new mapboxgl.FullscreenControl,t.fullscreenControlPosition),t.searchControl&&(TWER.MapboxGeocoder=new MapboxGeocoder({accessToken:mapboxgl.accessToken,zoom:14,placeholder:t.searchControlPlaceholder,mapboxgl:mapboxgl,marker:!1}),TWER.map.addControl(TWER.MapboxGeocoder,t.searchControlPosition)),t.zoomControl&&TWER.map.addControl(new mapboxgl.NavigationControl,t.zoomControlPosition),t.scrollZoom||TWER.map.scrollZoom.disable(),TWER.onLoadMap(),t.allowCluster&&TWER.clustersHandlers(),TWER.onClickMap(),TWER.boundsData=TWER.map.getBounds().toArray(),TWER.fitBounds=t.fitBounds,TWER.map.setRenderWorldCopies(t.worldCopy),new class{constructor(e){if(TWER.tour=e.allowTour,TWER.tourAutoRun=e.allowTour,e.allowTour){localStorage.setItem("toggleTourTag",1),localStorage.setItem("toggleTourEnd",1),localStorage.setItem("toggleTourNeverRunning",1);let t={tourData:e.tourData,tourPopUp:e.tourPopUp,tourType:e.tourType,tourFlySpeed:e.tourFlySpeed,tourFlyCurve:e.tourFlyCurve,tourLabelMarker:e.tourLabelMarker};this.tourHandler(t),e.tourAutoRun&&TWER.map.once("idle",(()=>{setTimeout((()=>{document.getElementById("btn-tour-right").click()}),200)}))}else localStorage.setItem("toggleTourTag",0),localStorage.setItem("toggleTourEnd",1),localStorage.setItem("toggleTourNeverRunning",1)}tourHandler(e){let t=JSON.parse(e.tourData),a=e.tourPopUp,r=-1,o=document.getElementsByClassName("twer-tour-number-container-js"),s=document.getElementsByClassName("twer-tour-number"),n=document.getElementsByClassName("twer-tour-number-label");const l=document.getElementsByClassName("text-label");let i=t.length;function c(e){return e.toLocaleString("en-US",{minimumIntegerDigits:2,useGrouping:!1})}0!==i&&(document.getElementById("btn-tour-left").addEventListener("click",(p=>{let d=(r<=0&&(r=t.length),r-=1,{ix:r,data:t[r]});if(void 0===d.data)return;TWER.tourInProgress=!0;let u=d.data,m=d.ix+1,g=u.showPopUp,h=u.advanced_settings;if(console.log(l.length),!e.tourLabelMarker&&l.length>0&&(l[0].style.display="none"),void 0!==o[0]&&(o[0].classList.add("with-number"),s[0].innerHTML=c(m)+"/"+c(i),e.tourLabelMarker&&(n[0].innerHTML=u.title)),"jump"===e.tourType?TWER.map.jumpTo({center:[u.geo.lang,u.geo.lat],zoom:u.zoom,pitch:u.pitch,bearing:u.bearing,padding:{top:u.tourOffsets.top,bottom:u.tourOffsets.bottom,left:u.tourOffsets.left,right:u.tourOffsets.right}}):"fly"===e.tourType&&TWER.map.flyTo({center:[u.geo.lang,u.geo.lat],zoom:u.zoom,speed:parseFloat(u.flySpeed),curve:parseFloat(u.flyCurve),pitch:u.pitch,bearing:u.bearing,padding:{top:u.tourOffsets.top,bottom:u.tourOffsets.bottom,left:u.tourOffsets.left,right:u.tourOffsets.right}}),a){if(!h||g?TWER.closePopups([],{except:[u.id]}):TWER.closePopups(),!h||h&&g){let e={},t=JSON.parse(u.geo.str);e.target=document.getElementById(`twer-popup-id-${u.id}`),TWER.openPopup(e,t,{toggle:!1})}}else if(h&&g){TWER.closePopups([],{except:[u.id]});let e={},t=JSON.parse(u.geo.str);e.target=document.getElementById(`twer-popup-id-${u.id}`),TWER.openPopup(e,t,{toggle:!1})}else TWER.closePopups()})),document.getElementById("btn-tour-right").addEventListener("click",(p=>{let d=(r+=1,r%=t.length,{ix:r,data:t[r]});if(void 0===d.data)return;TWER.tourInProgress=!0;let u=d.data,m=d.ix+1,g=u.showPopUp,h=u.advanced_settings;if(!e.tourLabelMarker&&l.length>0&&(l[0].style.display="none"),void 0!==o[0]&&(o[0].classList.add("with-number"),s[0].innerHTML=c(m)+"/"+c(i),e.tourLabelMarker&&(n[0].innerHTML=u.title)),"jump"===e.tourType?TWER.map.jumpTo({center:[u.geo.lang,u.geo.lat],zoom:u.zoom,pitch:u.pitch,bearing:u.bearing,padding:{top:u.tourOffsets.top,bottom:u.tourOffsets.bottom,left:u.tourOffsets.left,right:u.tourOffsets.right}}):"fly"===e.tourType&&TWER.map.flyTo({center:[u.geo.lang,u.geo.lat],padding:{top:u.tourOffsets.top,bottom:u.tourOffsets.bottom,left:u.tourOffsets.left,right:u.tourOffsets.right},zoom:u.zoom,speed:parseFloat(u.flySpeed),curve:parseFloat(u.flyCurve),pitch:u.pitch,bearing:u.bearing}),a){if(!h||g?TWER.closePopups([],{except:[u.id]}):TWER.closePopups(),!h||h&&g){let e={},t=JSON.parse(u.geo.str);e.target=document.getElementById(`twer-popup-id-${u.id}`),TWER.openPopup(e,t,{toggle:!1})}}else if(h&&g){TWER.closePopups([],{except:[u.id]});let e={},t=JSON.parse(u.geo.str);e.target=document.getElementById(`twer-popup-id-${u.id}`),TWER.openPopup(e,t,{toggle:!1})}else TWER.closePopups()})))}}(t),new class{constructor(e){const t=treweler_params.i18n_categories,a={selectionCssClass:"select2-map-filter-select",dropdownCssClass:"select2-map-filter-ddl",minimumResultsForSearch:1/0,closeOnSelect:!1,dropdownParent:jQuery(".select2-map-filter"),placeholder:t.all,language:{noResults:function(){return t.not_found}}},r=jQuery("#mapCatField"),o=r.closest(".twer-widget");let s=!1;(o.hasClass("twer-bottom-right")||o.hasClass("twer-bottom-left"))&&(s=!0),s&&(a.dropdownPosition="above"),r.select2(a),jQuery(".select2-search.select2-search--inline").html('<span class="category-label">'+t.all+"</span>"),r.on("change",(function(e){let a=jQuery(".select2-search .category-label"),o=r.select2("data").length,s=jQuery(".select2-results__options .select2-results__option").length;0===o?a.html('<span class="category-label">'+t.no_selected+"</span>"):1===o?a.html('<span class="category-label">1 '+t.one_selected+"</span>"):o>1&&s!==o?a.html('<span class="category-label">'+o+" "+t.selected+"</span>"):a.html('<span class="category-label">'+t.all+"</span>")}));let n=jQuery(".select2.select2-container");n.has(".select2-dropdown--below").addClass("select2-is-dropdown-below"),n.has(".select2-dropdown--above").addClass("select2-is-dropdown-above"),r.on("select2:unselect",(e=>{let t=parseInt(e.params.data.id)||0;const a=document.getElementById("mapCatField").options,r={};for(let e=0;e<a.length;e++)t===parseInt(a[e].value)?r[a[e].value]=!1:r[a[e].value]=a[e].selected;if(TWER.fitBounds&&TWER.map.fitBounds(TWER.boundsData,{linear:!0}),!window.TWER.data.allowStoreLocator)if(TWER.allowCluster){TWER.globalClusterStatus=!1;const e=[],a=[],o=[];if(!TWER.isEmpty(TWER.clusterData)&&TWER.clusterData.features.length>0){for(let a=0;a<TWER.clusterData.features.length;a++){const s=TWER.clusterData.features[a].properties,n=JSON.parse(s.cat_ids);if(n.length<=1)n.includes(t)&&(o.push(t),e.push(a),TWER.clusterDataDump.push(TWER.clusterData.features[a]));else{let s=0;for(let e=0;e<n.length;e++)r[n[e]]||s++;s===n.length&&n.includes(t)&&(o.push(t),e.push(a),TWER.clusterDataDump.push(TWER.clusterData.features[a]))}}if(e.length>0){const t=new Set(e);TWER.clusterData.features=TWER.clusterData.features.filter(((e,a)=>!t.has(a)))}for(let e=0;e<TWER.markers.length;e++){const t=TWER.markers[e].feature.properties,s=JSON.parse(t.cat_ids);if(s.length<=1)s.some((e=>o.includes(e)))&&(a.push(e),TWER.markersDataDump.push(TWER.markers[e]));else{let t=0;for(let e=0;e<s.length;e++)r[s[e]]||t++;t===s.length&&s.some((e=>o.includes(e)))&&(a.push(e),TWER.markersDataDump.push(TWER.markers[e]))}}if(a.length>0){for(let e=0;e<a.length;e++)TWER.markers[a[e]].element.remove();const e=new Set(a);TWER.markers=TWER.markers.filter(((t,a)=>!e.has(a))),TWER.map.getSource("locations").setData(TWER.clusterData)}}if(TWER.markersIgnoredClusters.length>0)for(let e=0;e<TWER.markersIgnoredClusters.length;e++)TWER.markersIgnoredClusters[e].element._element.classList.contains(`category-${t}`)&&(TWER.markersIgnoredClusters[e].show=!1,TWER.markersIgnoredClusters[e].element._element.style.display="none")}else for(let e=0;e<TWER.markers.length;e++)TWER.markers[e].element._element.classList.contains(`category-${t}`)&&(TWER.markers[e].show=!1,TWER.markers[e].element._element.style.display="none");let o=e.params.data.element.dataset.routes.split(" "),s=!1,n=[];for(let e=0;e<o.length;e++)jQuery("#mapCatField option[value!='"+t+"'][data-routes*='"+o[e]+"']").is(":checked")?s=!0:n.push(o[e]);for(let e=0;e<n.length;e++)n[e]&&"route-0"!==n[e]&&TWER.map.setLayoutProperty(n[e],"visibility","none")})),r.on("select2:select",(e=>{if(!window.TWER.data.allowStoreLocator){let t=parseInt(e.params.data.id)||0;if(TWER.fitBounds&&TWER.map.fitBounds(TWER.boundsData,{linear:!0}),TWER.allowCluster){TWER.globalClusterStatus=!1;const e=[],a=[],r=[];if(!TWER.isEmpty(TWER.clusterDataDump)&&TWER.clusterDataDump.length>0){for(let a=0;a<TWER.clusterDataDump.length;a++){const o=TWER.clusterDataDump[a].properties;JSON.parse(o.cat_ids).includes(t)&&(r.push(t),e.push(a),TWER.clusterData.features.push(TWER.clusterDataDump[a]))}const o=new Set(e);TWER.clusterDataDump=TWER.clusterDataDump.filter(((e,t)=>!o.has(t)));for(let e=0;e<TWER.markersDataDump.length;e++){const t=TWER.markersDataDump[e].feature.properties;JSON.parse(t.cat_ids).some((e=>r.includes(e)))&&(a.push(e),TWER.markers.push(TWER.markersDataDump[e]))}for(let e=0;e<a.length;e++){const t=TWER.markersDataDump[a[e]].feature.geometry.coordinates,r=TWER.markersDataDump[a[e]].feature.properties,o=null==r?void 0:r.description;r.showPopup=!1;const s=TWER.createNewMarker(r,t,o);TWER.markersDataDump[a[e]].element=new mapboxgl.Marker(s).setLngLat(t).addTo(TWER.map),TWER.__afterCreateNewMarker(s,r)}const s=new Set(a);TWER.markersDataDump=TWER.markersDataDump.filter(((e,t)=>!s.has(t))),TWER.map.getSource("locations").setData(TWER.clusterData)}if(TWER.markersIgnoredClusters.length>0)for(let e=0;e<TWER.markersIgnoredClusters.length;e++)TWER.markersIgnoredClusters[e].element._element.classList.contains(`category-${t}`)&&(TWER.markersIgnoredClusters[e].show=!0,TWER.markersIgnoredClusters[e].element._element.style.display="block")}else for(let e=0;e<TWER.markers.length;e++)TWER.markers[e].element._element.classList.contains(`category-${t}`)&&(TWER.markers[e].show=!0,TWER.markers[e].element._element.style.display="block")}let t=e.params.data.element.dataset.routes.split(" ");for(let e=0;e<t.length;e++)t[e]&&"route-0"!==t[e]&&TWER.map.setLayoutProperty(t[e],"visibility","visible")}))}},new class{constructor(e){let t=jQuery(".twer-mobile-menu"),a=jQuery(".twer-mobile-cat"),r=jQuery(".map-category-container");const o=jQuery("#mapCatField");var s=jQuery(window).width();jQuery(window).on("resize",(function(){jQuery(this).width()!==s&&((s=jQuery(this).width())>650?(r.show(),t.hide()):(r.hide(),t.show()))})),t.on("click",(function(){if(jQuery(window).width()>650)return!1;r.show(),o.select2("open")})),o.on("select2:open",(function(e){if(jQuery(window).width()>650)return!1;a.hide()})),o.on("select2:close",(function(e){if(jQuery(window).width()>650)return!1;r.hide(),a.show()}))}},new class{constructor(e){Fancybox.bind("[data-fancybox]",{closeButton:"outside",template:{closeButton:'<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M1 1.00146L22.9988 23.0008" stroke="white" stroke-linecap="round"/><path d="M23 1L1.00094 22.9991" stroke="white" stroke-linecap="round"/></svg>'},dragToClose:!1,Image:{zoom:!1,click:null,wheel:null},Toolbar:{items:{place:{type:"div",class:"fancybox__place js-fancybox-twer-place",label:"Place",tabindex:-1,html:"",position:"left"},prev:{type:"button",class:"fancybox__button--prev",label:"PREV",html:'<svg width="8" height="14" viewBox="0 0 8 14" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M6.82572 12.6514L1.00003 6.82569L6.82572 1" stroke="white"/></svg>',click:function(e){e.preventDefault(),this.fancybox.prev()},position:"right"},next:{type:"button",class:"fancybox__button--next",label:"NEXT",html:'<svg width="8" height="14" viewBox="0 0 8 14" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M1.17428 12.6514L6.99997 6.82569L1.17428 1" stroke="white"/></svg>',click:function(e){e.preventDefault(),this.fancybox.next()},position:"right"}},display:["place","prev","next"]},Carousel:{Navigation:!1},keyboard:{Escape:"close",Delete:"close",Backspace:"close",PageUp:!1,PageDown:!1,ArrowUp:!1,ArrowDown:!1,ArrowRight:!1,ArrowLeft:!1},on:{"Carousel.change":e=>{const t=e.plugins.Toolbar.$container,a=e.items[0].$trigger.dataset.place.trim(),r=t.getElementsByClassName("js-fancybox-twer-place")[0],o=e.getSlide().caption;let s="";o.length>0&&(s='<div class="place-separator"></div>'),r.innerHTML=`${a}${s}${o}`},ready:e=>{const t=e.plugins.Toolbar.$container,a=e.items[0].$trigger.dataset.place.trim(),r=t.getElementsByClassName("js-fancybox-twer-place")[0],o=e.items[0].$trigger.getElementsByTagName("img")[0].alt.trim();let s="";o.length>0&&(s='<div class="place-separator"></div>'),r.innerHTML=`${a}${s}${o}`}},Thumbs:!1,hash:!1})}},new class{constructor(){e(this,"$preloader",null),e(this,"$counter",null),this.$preloader=document.getElementsByClassName("twer-preloader"),this.$counter=document.querySelectorAll(".twer-preloader .loading-progress"),TWER.data.boundaries||this.initPreloader(),TWER.map.on("idle",(e=>{TWER.data.boundaries||this.hide()}))}initPreloader(){if(this.$preloader.length>0){let e=0;if(0===e){e=1;let t=1;const a=setInterval((()=>{let r=Math.floor(5*Math.random()+95);t>=r?(clearInterval(a),e=0):(t++,this.$counter.length>0&&(this.$counter[0].innerHTML=`${t}%`))}),10)}}}hide(){this.$preloader.length>0&&setTimeout((()=>{this.$preloader[0].classList.add("twer-preloader--hide")}),500)}},jQuery(document).on("click",".js-twer-close-popup-btn",(e=>{e.preventDefault();const t=e.target.closest(".js-twer-popup").classList.value.match(/twer-popup-id-\d+/gm),a=void 0!==t[0]?parseInt(t[0].replace(/^\D+/g,"")):"";""!==a&&TWER.closePopups([a])}))},onLoadMap:function(){TWER.map.on("load",(async()=>{const e=TWER.data.bgOverlay.replace(/^.*,(.+)\)/,"$1"),t=isNaN(parseFloat(e))?1:parseFloat(e);if(TWER.data.bgOverlay&&0!==t&&TWER.map.addLayer({id:"bg-layer",type:"background",paint:{"background-color":TWER.data.bgOverlay}}),!TWER.isEmpty(TWER.clusterData)){if(TWER.map.addSource("locations",{type:"geojson",data:TWER.clusterData,generateId:!0,cluster:!0,clusterMaxZoom:TWER.data.clusterMaxZoom,clusterRadius:50}),TWER.map.addLayer({id:"clusters",type:"circle",source:"locations",filter:["has","point_count"],paint:{"circle-color":"#fff","circle-radius":40,"circle-stroke-color":"#ac2929","circle-opacity":0,"circle-stroke-opacity":0}}),TWER.map.addLayer({id:"markerPnt",type:"symbol",source:"locations",filter:["has","point_count"],layout:{"text-field":"{point_count_abbreviated}","text-font":["Open Sans Semibold","Arial Unicode MS Bold"],"text-size":0}}),TWER.map.addLayer({id:"unclustered-point",type:"circle",source:"locations",filter:["!",["has","point_count"]],paint:{"circle-color":"#22b719","circle-radius":15,"circle-stroke-width":1,"circle-stroke-color":"#fff","circle-stroke-opacity":0,"circle-opacity":0}}),TWER.clusterData.features.length>0){let i=0;const c=[];for(const p of TWER.clusterData.features){const d={},u=p.geometry.coordinates,m=p.properties,g=null==m?void 0:m.description,h=TWER.createNewMarker(m,u,g);d.element=new mapboxgl.Marker(h).setLngLat(u).addTo(TWER.map),TWER.__afterCreateNewMarker(h,m,u),d.feature=p,d.show=!0,!m.allowMarkerCluster&&TWER.allowCluster?(c.push(i),TWER.markersIgnoredClusters.push(d)):TWER.markers.push(d),i++}if(c.length>0){const b=new Set(c);let y=[],w=[];TWER.clusterData.features.filter(((e,t)=>{b.has(t)?w.push(e):y.push(e)})),TWER.clusterData.features=TWER.clusterData.features.filter(((e,t)=>!b.has(t))),TWER.outClusterFeatures=w,TWER.map.getSource("locations").setData(TWER.clusterData)}}let a=[],r=[],o=[],s=[],n=[];function l(e,t){return t.some((function(t){return t.id===e}))}TWER.map.on("render",(()=>{if(!TWER.map.isSourceLoaded("locations")||!TWER.allowCluster)return;a=[],r=[],o=[],s=[];const e=TWER.map.querySourceFeatures("locations",{sourceLayer:["unclustered-point"]}),t=TWER.map.querySourceFeatures("locations",{filter:["!",["has","point_count"]],sourceLayer:["unclustered-point"]}),i=TWER.map.querySourceFeatures("locations",{filter:["has","point_count"],sourceLayer:["unclustered-point"]});if(e.length>0)for(let t=0;t<e.length;t++)l(e[t].id,o)||o.push(e[t]);if(t.length>0)for(let e=0;e<t.length;e++)l(t[e].id,a)||a.push(t[e]);if(i.length>0)for(let e=0;e<i.length;e++)l(i[e].id,r)||r.push(i[e]);if(0!==r.length&&TWER.markers.length>0){for(let e=0;e<TWER.markers.length;e++)TWER.map.getBounds().contains(TWER.markers[e].element.getLngLat())&&s.push(TWER.markers[e]);for(let e=0;e<s.length;e++){let t=[],r=s[e].feature.properties.id;for(let e=0;e<a.length;e++)t.push(a[e].properties.id);t.includes(r)?(s[e].show=!0,s[e].element._element.style.display="block"):(TWER.tourInProgress||TWER.closePopups([s[e].feature.properties.id]),s[e].show=!1,s[e].element._element.style.display="none")}r.length,n.length;{const e=[];for(let t=0;t<r.length;t++)e.push(r[t].id);if(0!==n.length){const t=[];for(let a=0;a<n.length;a++)e.includes(n[a].feature.id)||(n[a].feature={},n[a].element.remove(),n[a].show=!1,t.push(a));const a=new Set(t);n=n.filter(((e,t)=>!a.has(t)))}for(let e=0;e<r.length;e++){let t=!1;if(0!==n.length)for(let a=0;a<n.length;a++){const o=parseInt(n[a].element.getElement().getElementsByClassName("marker__center")[0].textContent);n[a].feature.id===r[e].id&&(t=!0,o!==r[e].properties.point_count&&(n[a].element.getElement().getElementsByClassName("marker__center")[0].textContent=r[e].properties.point_count))}if(t)continue;const a=r[e].properties,o=r[e].geometry.coordinates;let s=TWER.createNewCluster(a),l={};l.element=new mapboxgl.Marker(s).setLngLat(o).addTo(TWER.map),l.feature=r[e],l.show=!0,n.push(l)}}TWER.globalClusterStatus=!0}else{for(let e=0;e<TWER.markers.length;e++)lodash.has(TWER.markers[e],"insideStoreLocator")?TWER.markers[e].insideStoreLocator&&(!1===TWER.markers[e].show&&(TWER.markers[e].show=!0,TWER.markers[e].element._element.style.display="block"),TWER.markers[e].mustShowInCluster&&(TWER.markers[e].element._element.style.display="block")):!1===TWER.markers[e].show&&(TWER.markers[e].show=!0,TWER.markers[e].element._element.style.display="block");const e=[];for(let t=0;t<n.length;t++)!0===n[t].show&&(n[t].show=!1,n[t].feature={},n[t].element.remove(),e.push(t));const t=new Set(e);n=n.filter(((e,a)=>!t.has(a)))}})),TWER.map.on("zoom",(e=>{void 0!==e.originalEvent&&(TWER.tourInProgress=!1)})),TWER.map.on("zoomend",(function(e){void 0!==e.originalEvent&&document.querySelectorAll(".js-twer-popup").forEach((e=>{const t=e.classList.value.match(/twer-popup-id-\d+/gm);t[0]&&(document.getElementById(t[0])||TWER.closePopups())}))}))}if(TWER.data.storeLocatorMarkerTemplate&&this.setMarkerStyle(TWER.data.storeLocatorMarkerTemplate),TWER.data.storeLocatorMarker){let f=TWER.data.center;this.addMarker(this.markerLocationProps,f)}}))},addMarker:function(e,t){const a=this.createNewMarker1(e,t,"");this.markerLocation=new mapboxgl.Marker(a).setLngLat(t).addTo(TWER.map)},setMarkerStyle:function(e){this.markerLocationProps={...this.markerLocationProps,...JSON.parse(e)}},removeMarker:function(){this.markerLocation.remove()},isMarker:function(e){var t;let a=!1;return(e.classList.contains("js-twer-marker")||e.classList.contains("treweler-marker")||null!==(t=e.closest(".js-twer-marker"))&&void 0!==t&&t.classList.contains("js-twer-marker"))&&(a=!0),a},isCluster:function(e){var t;let a=!1;return(e.classList.contains("marker__center")||e.classList.contains("marker__border")||null!==(t=e.closest(".mapboxgl-marker"))&&void 0!==t&&t.classList.contains("treweler-cluster"))&&(a=!0),a},onClickMap:function(){TWER.map.on("click",(e=>{e.originalEvent.target.classList.contains("mapboxgl-canvas")&&TWER.closePopups(),!TWER.data.storeLocatorMarker||this.isMarker(e.originalEvent.target)||this.isCluster(e.originalEvent.target)||(this.removeMarker(),this.addMarker(this.markerLocationProps,e.lngLat.wrap())),TWER.tourInProgress=!1,!TWER.data.mapCenterOnClick||this.isMarker(e.originalEvent.target)||this.isCluster(e.originalEvent.target)||TWER.map.flyTo({center:e.lngLat.wrap(),essential:!0})}))},onClickMapTour:function(){document.getElementById("twer-map").addEventListener("click",(e=>{const t=e.target;t.closest(".js-twer-popup")||t.classList.contains("js-twer-marker")||t.closest(".js-twer-marker")||TWER.closeTourPopup()}))},closeTourPopup:function(){if(void 0===TWER.popups||0===TWER.popups.length)return!1;TWER.popups.forEach(((e,t,a)=>{if(e._container){if(e._container.classList.contains("twer-popup--AlwaysShow"))return!1;if(e._container.classList.contains("twer-popup--show"))return!1;if(e._container.classList.contains("twer-popup--OpenDefault")&&0===parseInt(localStorage.getItem("toggleTourNeverRunning")))return!1;let a;e._container.classList.contains("js-twer-popup")&&(a=e._container),e._container.closest(".js-twer-popup")&&(a=e._container.closest(".js-twer-popup")),a.classList.remove("twer-popup--TourShow"),a.classList.remove("twer-popup--OpenDefault"),setTimeout((function(){e.remove()}),600),TWER.popups.splice(t,1)}})),document.querySelectorAll(".js-twer-marker").forEach((e=>{e.classList.remove("open")}))},closePopups:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(void 0===TWER.popups||0===TWER.popups.length)return!1;let a=[];t.hasOwnProperty("except")&&(a=t.except),TWER.popups.forEach(((t,r)=>{if(void 0!==t._container){if(t._container.classList.contains("twer-popup--AlwaysShow"))return;if(t._container.classList.contains("twer-popup--TourShow"))return;const o=parseInt(t.options.metadata.id);let s=!1;if(0!==e.length)for(let t=0;t<e.length;t++)e[t]!==o&&(s=!0);let n=!1;if(a.forEach((e=>{t._container.classList.contains(`twer-popup-id-${e}`)&&(n=!0)})),n)return;if(s)return;t.removeClassName("twer-popup--show"),t.removeClassName("twer-popup--OpenDefault"),setTimeout((()=>{t.remove()}),TWER.animationDelayClose),TWER.popups[r]=null}})),TWER.popups=TWER.popups.filter((function(e){return null!=e})),document.querySelectorAll(".js-twer-marker").forEach((e=>{e.classList.remove("open")}))},openPopup:function(e,t){let a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=e.target,o=document.getElementsByClassName(r.getAttribute("id"))[0];if(void 0!==o)return!1;let s=!0;if(a.hasOwnProperty("toggle")&&(s=a.toggle),s&&(TWER.closePopups(),TWER.closeTourPopup()),!r.classList.contains("open")&&(r.classList.contains("js-twer-marker")||r.closest(".js-twer-marker"))){let e,a;const o=document.createRange();if(r.classList.contains("js-twer-marker")&&(a=r,e=a.getElementsByTagName("template")[0]),r.closest(".js-twer-marker")&&(a=r.closest(".js-twer-marker"),e=a.getElementsByTagName("template")[0]),e){const r=document.createElement("DIV"),s=o.createContextualFragment(e.innerHTML);r.appendChild(s);const n=r.getElementsByClassName("js-twer-popup__wrap")[0].dataset.class,l=r.getElementsByClassName("js-twer-popup__wrap")[0].dataset.idpopup,i=r.getElementsByClassName("js-twer-popup__wrap")[0].dataset.borderradius,c=r.getElementsByClassName("js-twer-popup__wrap")[0].dataset.minwidthalternate;r.getElementsByClassName("js-twer-popup__wrap")[0].removeAttribute("data-class"),r.getElementsByClassName("js-twer-popup__wrap")[0].removeAttribute("data-idpopup"),r.getElementsByClassName("js-twer-popup__wrap")[0].removeAttribute("data-borderradius"),r.getElementsByClassName("js-twer-popup__wrap")[0].removeAttribute("data-minwidthalternate");const p=r.innerHTML;a.classList.add("open");let d=14;a.classList.contains("twer-marker-type--balloon-default")&&(d=parseInt(a.getElementsByClassName("marker-svg")[0].dataset.height)+3),a.classList.contains("twer-marker-type--triangle-default")&&(d=parseInt(a.getElementsByClassName("marker-triangle")[0].dataset.height)+10,d=parseInt(d/2));const u=new mapboxgl.Popup({closeButton:!1,className:n,closeOnClick:!1,focusAfterOpen:!1,anchor:"bottom",offset:d,metadata:{id:l}}).setLngLat(t).setHTML(p).setMaxWidth("none").addTo(TWER.map);if(u._content.style.borderRadius=`${i}px`,c.length>0){const e=u._content.closest(".js-twer-popup").getAttribute("style");u._content.closest(".js-twer-popup").setAttribute("style",`min-width:${c}px !important;${e}`)}setTimeout((function(){u.addClassName("twer-popup--show")}),TWER.animationDelayOpen),TWER.popups.push(u)}}document.activeElement.blur(),jQuery(window.wp.mediaelement.initialize)},clustersHandlers:function(){TWER.map.on("click","clusters",(e=>{TWER.globalClusterStatus=!0;const t=TWER.map.queryRenderedFeatures(e.point,{layers:["clusters"]}),a=t[0].properties.cluster_id;TWER.map.getSource("locations").getClusterExpansionZoom(a,((e,a)=>{e||TWER.map.easeTo({center:t[0].geometry.coordinates,zoom:a+.5})}))})),TWER.map.on("mouseenter","clusters",(()=>{TWER.map.getCanvas().style.cursor="pointer"})),TWER.map.on("mouseleave","clusters",(()=>{TWER.map.getCanvas().style.cursor=""}))},hex2rgba:function(e,t){return e=e.replace("#",""),`rgba(${parseInt(e.substring(0,2),16)},${parseInt(e.substring(2,4),16)},${parseInt(e.substring(4,6),16)},${t})`},isEmpty:function(e){for(let t in e)if(e.hasOwnProperty(t))return!1;return JSON.stringify(e)===JSON.stringify({})},createNewCluster:function(e){const t=document.createElement("div");return t.innerHTML=`<div class="treweler-marker-cluster"><div class="marker marker--cluster" >\n                             <div class="marker-wrap">\n                             <div class="marker__shadow" style="border-color:${TWER.hex2rgba(TWER.clusterColor,.1)}">\n                             <div class="marker__border" style="border-color:${TWER.hex2rgba(TWER.clusterColor,.4)}">\n                             <div class="marker__center" style="background-color:${TWER.clusterColor};">${e.point_count}</div>\n                             </div>\n                             </div>\n                             </div>\n                             </div></div>`,t.classList.add("treweler-cluster"),t.classList.add("trew-cluster-id-"+e.cluster_id),t},createNewMarker1:function(e,t,a){const r=document.createElement("div");if("default"===e.marker_style)r.innerHTML=`<div class="treweler-marker"><div class="marker">\n                 <div class="marker-wrap">\n                 <div class="marker__shadow" style="background-color:${TWER.hex2rgba(e.point_halo_color,e.point_halo_opacity)}">\n                 <div class="marker__border" style="border-color:${e.point_color};">\n                 <div class="marker__center"></div>\n                 </div>\n                 </div>\n                 </div>\n                 </div></div>`;else if("dot-default"===e.marker_style){let t="";e.dot_icon_picker.length>0&&e.dot_icon_show>0&&(t=`<span class="marker-dot__icon material-icons material-icons--reset" style="color:${e.dot_icon.color};font-size:${e.dot_icon.size}px;">${e.dot_icon_picker}</span>`),r.innerHTML=`<div class="treweler-marker" style="width:${e.dot.size}px;height:${e.dot.size}px;border-radius:${e.dot_corner_radius.size}${e.dot_corner_radius.units};border:${e.dot_border.size}px solid ${e.dot_border.color};background-color:${e.dot.color};">${t}</div>`}else if("triangle-default"===e.marker_style){const t=`\n                        border-right-width:${e.triangle_width/2}px;\n                        border-left-width:${e.triangle_width/2}px;\n                        border-bottom-width: ${e.triangle_height}px;\n                        border-bottom-color: ${e.triangle_color};\n                        `;r.innerHTML=`<div data-height="${e.triangle_height}" class="treweler-marker marker-triangle" style="${t}"></div>`}else if("balloon-default"===e.marker_style){const t=e.balloon.size+(e.balloon_border.size+e.balloon_border.size),a=(t+t-Math.sqrt(Math.pow(t,2)+Math.pow(t,2)))*(Math.sqrt(2)-1)/2;let o=`\n                        background-color: ${e.balloon.color};    \n                        border: ${e.balloon_border.size}px solid ${e.balloon_border.color};\n                        bottom:${a+a}px;                        \n                        width: ${e.balloon.size}px;\n                        height: ${e.balloon.size}px;`,s=`\n                        width:${e.balloon_dot.size}px;\n                        height:${e.balloon_dot.size}px;\n                        margin-left:${e.balloon_dot.size/2*-1}px;\n                        margin-top:${e.balloon_dot.size/2*-1}px;\n                        background-color:${e.balloon_dot.color};\n                        `,n="";e.balloon_icon_picker.length>0&&e.balloon_icon_show>0&&(n=`<span class="marker-balloon__icon material-icons material-icons--reset" style="color:${e.balloon_icon.color};font-size:${e.balloon_icon.size}px;">${e.balloon_icon_picker}</span>`),r.innerHTML=`<div data-width="${e.balloon.size}" data-height="${t+a+a}" class="treweler-marker marker-svg"><div class="marker-balloon" style="${o}"><div class="marker-balloon__dot" style="${s}">${n}</div></div></div>`,e.anchor="bottom"}else if("custom"===e.marker_style){const t=""!==e.custom_marker_size_default?e.custom_marker_size_default.split(";"):"42;42".split(";");r.className="treweler-marker icon",r.style.backgroundImage=`url('${e.custom_marker_img}')`,r.style.backgroundSize="contain",r.style.backgroundRepeat="no-repeat",r.style.backgroundPosition="center center";const a=parseInt(t[1])<=42?parseInt(t[1])%2==0?parseInt(t[1]):parseInt(t[1])+1:42,o=parseInt(t[0])<=42?parseInt(t[0])%2==0?parseInt(t[0]):parseInt(t[0])+1:42,s=parseInt(e.custom_marker_size)>1?parseInt(e.custom_marker_size):a,n=parseInt(e.custom_marker_size)>1?parseInt(e.custom_marker_size):o;r.style.width=`${s}px`,r.style.height=`${n}px`,e.anchor=e.custom_marker_position}else r.innerHTML=`<div class="treweler-marker"><div class="marker">\n                 <div class="marker-wrap">\n                 <div class="marker__shadow" style="background-color:${TWER.hex2rgba(e.point_halo_color,e.point_halo_opacity)}">\n                 <div class="marker__border" style="border-color:${e.point_color};">\n                 <div class="marker__center"></div>\n                 </div>\n                 </div>\n                 </div>\n                 </div></div>`,e.anchor="center";return r.classList.add("js-twer-marker"),r.setAttribute("id",`twer-popup-id-${e.id}`),r.classList.add(`twer-cursor-${e.cursor}`),r.classList.add(`twer-marker-type--${e.marker_style}`),{element:r,anchor:e.anchor}},createNewMarker:function(e,t,a){let r=!0;e.hasOwnProperty("showPopup")&&(r=e.showPopup);const o=document.createElement("div");let s="";if(""!==e.tourIndexNumber){const t=[],a=TWER.data.tourNumberSettings.fontColor,r=TWER.data.tourNumberSettings.fontSize,o=TWER.data.tourNumberSettings.fontWeight,n=TWER.data.tourNumberSettings.offset.top,l=TWER.data.tourNumberSettings.offset.bottom,i=TWER.data.tourNumberSettings.offset.left,c=TWER.data.tourNumberSettings.offset.right;t.push(`color:${a};`),t.push(`font-size:${r}px;`),t.push(`font-weight:${o};`),t.push(`padding-top:${n}px;`),t.push(`padding-bottom:${l}px;`),t.push(`padding-left:${i}px;`),t.push(`padding-right:${c}px;`),s=`<div class="twer-tour-index-number" style="${t.join("")}">${e.tourIndexNumber}</div>`}if(""===e.icon||void 0===e.icon){if("default"===e.type)o.innerHTML=`${s}<div class="treweler-marker"><div class="marker">\n                 <div class="marker-wrap">\n                 <div class="marker__shadow" style="background-color:${TWER.hex2rgba(e.halo_color,e.halo_opacity)}">\n                 <div class="marker__border" style="border-color:${e.color};">\n                 <div class="marker__center"></div>\n                 </div>\n                 </div>\n                 </div>\n                 </div></div>`;else if("dot-default"===e.type){let t="";e.dot_icon.length>0&&e.dot_icon_show>0&&(t=`<span class="marker-dot__icon material-icons material-icons--reset" style="color:${e.dot_icon_color};font-size:${e.dot_icon_size}px;">${e.dot_icon}</span>`),o.innerHTML=`${s}<div class="treweler-marker" style="width:${e.inner_size}px;height:${e.inner_size}px;border-radius:${e.corner_radius}${e.corner_radius_units};border:${e.border_width}px solid ${e.border_color};background-color:${e.dotcenter_color};">${t}</div>`}else if("triangle-default"===e.type){const t=`\n                        border-right-width:${e.width_triangle/2}px;\n                        border-left-width:${e.width_triangle/2}px;\n                        border-bottom-width: ${e.height_triangle}px;\n                        border-bottom-color: ${e.color_triangle};\n                        `;o.innerHTML=`${s}<div data-height="${e.height_triangle}" class="treweler-marker marker-triangle" style="${t}"></div>`}else if("balloon-default"===e.type){const t=e.size_balloon+(e.border_width_balloon+e.border_width_balloon),a=(t+t-Math.sqrt(Math.pow(t,2)+Math.pow(t,2)))*(Math.sqrt(2)-1)/2;let r=`\n                        background-color: ${e.color_balloon};    \n                        border: ${e.border_width_balloon}px solid ${e.border_color_balloon};\n                        bottom:${a+a}px;                        \n                        width: ${e.size_balloon}px;\n                        height: ${e.size_balloon}px;`,n=`\n                        width:${e.dot_size}px;\n                        height:${e.dot_size}px;\n                        margin-left:${e.dot_size/2*-1}px;\n                        margin-top:${e.dot_size/2*-1}px;\n                        background-color:${e.dot_color};\n                        `,l="";e.balloon_icon.length>0&&e.balloon_icon_show>0&&(l=`<span class="marker-balloon__icon material-icons material-icons--reset" style="color:${e.balloon_icon_color};font-size:${e.balloon_icon_size}px;">${e.balloon_icon}</span>`),o.innerHTML=`${s}<div data-width="${e.size_balloon}" data-height="${t+a+a}" class="treweler-marker marker-svg"><div class="marker-balloon" style="${r}"><div class="marker-balloon__dot" style="${n}">${l}</div></div></div>`,e.anchor="bottom"}else if("custom"!==e.type){const t=e.halo_color,a=e.halo_opacity,r=e.color;o.innerHTML=`${s}<div class="treweler-marker"><div class="marker">\n                 <div class="marker-wrap">\n                 <div class="marker__shadow" ${t&&a?'style="background-color:'+TWER.hex2rgba(t,a)+'"':""}>\n                 <div class="marker__border" ${r?'style="border-color:'+r+'"':""}>\n                 <div class="marker__center"></div>\n                 </div>\n                 </div>\n                 </div>\n                 </div></div>`,e.anchor="center"}}else{const t=""!==e.size?e.size.split(";"):"42;42".split(";");o.className="treweler-marker icon",o.style.backgroundImage=`url('${e.icon}')`,o.style.backgroundSize="contain",o.style.backgroundRepeat="no-repeat",o.style.backgroundPosition="center center";const a=parseInt(t[1])<=42?parseInt(t[1])%2==0?parseInt(t[1]):parseInt(t[1])+1:42,r=parseInt(t[0])<=42?parseInt(t[0])%2==0?parseInt(t[0]):parseInt(t[0])+1:42,n=parseInt(e.markerSize)>1?parseInt(e.markerSize):a,l=parseInt(e.markerSize)>1?parseInt(e.markerSize):r;o.style.width=`${n}px`,o.style.height=`${l}px`,o.innerHTML=`${s}`}if(o.classList.add("js-twer-marker"),o.setAttribute("id",`twer-popup-id-${e.id}`),void 0!==e.category&&o.classList.add(...e.category.split(" ")),o.classList.add(`twer-cursor-${e.cursor}`),o.classList.add(`twer-marker-type--${e.type}`),a){const s=document.createElement("template");s.innerHTML=a,o.getElementsByTagName("template")&&o.appendChild(s),"hover"===e.openby?(o.onmouseenter=e=>{this.openPopup(e,t)},e.openDefault&&r&&this.staticPopUp(o,t,3)):"click"===e.openby?(o.onclick=e=>{this.openPopup(e,t)},e.openDefault&&r&&this.staticPopUp(o,t,3)):"always_open"===e.openby&&this.staticPopUp(o,t,1)}if(e.markerHide){let e=[void 0];o.classList.contains("twer-marker-type--dot-default")?e=o.getElementsByClassName("treweler-marker"):o.classList.contains("twer-marker-type--default")?e=o.getElementsByClassName("marker"):o.classList.contains("twer-marker-type--balloon-default")?e=o.getElementsByClassName("treweler-marker"):o.classList.contains("twer-marker-type--triangle-default")?e=o.getElementsByClassName("treweler-marker marker-triangle"):o.classList.contains("twer-marker-type--custom")&&(o.style.backgroundImage="none"),void 0!==e[0]&&(e[0].style.visibility="hidden",e[0].style.opacity=0,e[0].style.overflow="hidden",e[0].style.height=0,e[0].style.width=0)}if(e.markerLabelEnable){const t=e.label,a=t.description.toString();if(!lodash.isEmpty(a)){const e=document.getElementById("js-twer-marker-label");o.appendChild(document.importNode(e.content,!0));const r=o.getElementsByClassName("twer-marker-label")[0];r.classList.add(`twer-marker-label--${t.position}`),r.innerHTML=a.trim(),r.style.color=t.font_color,r.style.fontSize=`${t.font_size}px`,r.style.fontWeight=t.font_weight,r.style.letterSpacing=`${t.letter_spacing}px`,r.style.lineHeight=t.line_height,t.label_has_bg&&(r.classList.add("twer-marker-label--has-bg"),r.style.borderRadius=`${t.label_border_radius}px`,r.style.paddingTop=`${t.label_padding.top}px`,r.style.paddingBottom=`${t.label_padding.bottom}px`,r.style.paddingLeft=`${t.label_padding.left}px`,r.style.paddingRight=`${t.label_padding.right}px`)}}return{element:o,anchor:e.anchor}},__afterCreateNewMarker:(e,t,a)=>{if(t.markerLabelEnable&&t.label.description){let a=0;const r=t.label,o=e.element.getElementsByClassName("twer-marker-label")[0],s=e.element.getElementsByClassName("marker"),n=e.element.getElementsByClassName("marker-svg");let l=[void 0],i=[30,30],c=[103,88];if(l=s.length>0?s:n.length>0?n:[e.element],void 0!==l[0]){if(i[0]=l[0].getBoundingClientRect().width,i[1]=l[0].getBoundingClientRect().height,l[0].classList.contains("marker-svg")){const e=parseInt(l[0].getElementsByClassName("marker-balloon")[0].style.bottom);i[1]=i[1]+e,l[0].getElementsByClassName("marker-balloon")[0].style.bottom=0}l[0].style.left="0px",l[0].style.top="0px",l[0].closest(".js-twer-marker, .treweler-marker").style.width=`${i[0]}px`,l[0].closest(".js-twer-marker, .treweler-marker").style.height=`${i[1]}px`}c[0]=o.getBoundingClientRect().width-a,c[1]=o.getBoundingClientRect().height-a,"top"!==r.position&&"bottom"!==r.position||(i[0]=i[0]-1,i[1]=i[1]-1),"bottom_right"!==r.position&&"bottom_left"!==r.position&&"top_right"!==r.position&&"top_left"!==r.position||(30===i[0]&&(i[0]-=7),30===i[1]&&(i[1]-=7));let p=r.margin-a;switch(r.position){case"left":case"right":o.style.marginTop=`-${c[1]/2}px`;break;case"top":case"bottom":o.style.marginLeft=`-${c[0]/2}px`;break;case"center":o.style.marginLeft=`-${c[0]/2}px`,o.style.marginTop=`-${c[1]/2}px`}switch(r.position){case"right":o.style.left=`${p+i[0]}px`;break;case"bottom_right":o.style.left=`${p+i[0]}px`,o.style.top=`${p+i[1]}px`;break;case"top_right":o.style.left=`${p+i[0]}px`,o.style.bottom=`${p+i[1]}px`;break;case"left":o.style.right=`${p+i[0]}px`;break;case"bottom_left":o.style.right=`${p+i[0]}px`,o.style.top=`${p+i[1]}px`;break;case"top_left":o.style.right=`${p+i[0]}px`,o.style.bottom=`${p+i[1]}px`;break;case"top":o.style.bottom=`${p+i[1]}px`;break;case"bottom":o.style.top=`${p+i[1]}px`}}t.allowMarkerCenterOnClick&&e.element.addEventListener("click",(e=>{e.preventDefault(),TWER.map.flyTo({center:a,padding:{top:t.markerClickOffset.top,bottom:t.markerClickOffset.bottom,left:t.markerClickOffset.left,right:t.markerClickOffset.right}})})),t.markerLink.enable&&e.element.addEventListener("click",(e=>{e.preventDefault();let a=t.markerLink.openInNewWindow?"_blank":"_self";TWER.isIframeMap()&&!t.markerLink.openInNewWindow&&(a="_parent"),window.open(t.markerLink.url,a)}))},isIframeMap:function(){return document.body.classList.contains("twer-page-iframe-map")},staticPopUp:function(e,t,a,r){const o=e;if(void 0!==document.getElementsByClassName(o.getAttribute("id"))[0])return!1;if(!o.classList.contains("open")&&(o.classList.contains("js-twer-marker")||o.closest(".js-twer-marker"))){let e,r;const s=document.createRange();if(o.classList.contains("js-twer-marker")&&(r=o,e=r.getElementsByTagName("template")[0]),o.closest(".js-twer-marker")&&(r=o.closest(".js-twer-marker"),e=r.getElementsByTagName("template")[0]),e){const o=document.createElement("DIV"),n=s.createContextualFragment(e.innerHTML);o.appendChild(n);const l=o.getElementsByClassName("js-twer-popup__wrap")[0].dataset.class,i=o.getElementsByClassName("js-twer-popup__wrap")[0].dataset.idpopup,c=o.getElementsByClassName("js-twer-popup__wrap")[0].dataset.borderradius,p=o.getElementsByClassName("js-twer-popup__wrap")[0].dataset.minwidthalternate;o.getElementsByClassName("js-twer-popup__wrap")[0].removeAttribute("data-class"),o.getElementsByClassName("js-twer-popup__wrap")[0].removeAttribute("data-idpopup"),o.getElementsByClassName("js-twer-popup__wrap")[0].removeAttribute("data-borderradius"),o.getElementsByClassName("js-twer-popup__wrap")[0].removeAttribute("data-minwidthalternate");const d=o.innerHTML;r.classList.add("open");let u=14;r.classList.contains("twer-marker-type--balloon-default")&&(u=parseInt(r.getElementsByClassName("marker-svg")[0].dataset.height)+3),r.classList.contains("twer-marker-type--triangle-default")&&(u=parseInt(r.getElementsByClassName("marker-triangle")[0].dataset.height)+10,u=parseInt(u/2));const m=new mapboxgl.Popup({className:l,closeButton:!1,closeOnClick:!1,anchor:"bottom",focusAfterOpen:!1,offset:u,metadata:{id:i}}).setLngLat(t).setHTML(d).setMaxWidth("none").addTo(TWER.map);if(m._content.style.borderRadius=`${c}px`,p.length>0){const e=m._content.closest(".js-twer-popup").getAttribute("style");m._content.closest(".js-twer-popup").setAttribute("style",`min-width:${p}px !important;${e}`)}1===a?setTimeout((function(){m.addClassName("twer-popup--AlwaysShow")}),110):2===a?m.addClassName("twer-popup--TourShow"):3===a?setTimeout((function(){m.addClassName("twer-popup--OpenDefault")}),110):m.addClassName("twer-popup--show"),TWER.popups.push(m)}}document.activeElement.blur()}}}();